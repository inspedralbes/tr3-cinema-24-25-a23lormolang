name: Deploy to HestiaCP

on:
  push:
    branches: [ghactionPruebas]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Frontend - Nuxt
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Nuxt dependencies
        run: npm ci
        working-directory: ./front

      - name: Build Nuxt
        run: npm run build
        working-directory: ./front
      
      - name: Verify build output
        run: ls -la ./front/.nuxt/dist/

      # Backend - Laravel
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, PDO, mysql, tokenizer, xml
          tools: composer

      - name: Install Laravel dependencies
        run: |
          composer install --no-dev --optimize-autoloader
          cp .env.example .env
          php artisan key:generate
        working-directory: ./back/laravel

      # Despliegue a HestiaCP
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_KEY }}" > ~/.ssh/prod_key
          chmod 600 ~/.ssh/prod_key
          echo "Host ${{ secrets.PROD_HOST }}" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/prod_key" >> ~/.ssh/config
          echo "  User ${{ secrets.PROD_USER }}" >> ~/.ssh/config

      - name: Deploy Files
        run: |
          # Configuración robusta de SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_KEY }}" > ~/.ssh/prod_key
          chmod 600 ~/.ssh/prod_key
          
          # Forzar autenticación solo por clave
          ssh -v -o IdentitiesOnly=yes -o StrictHostKeyChecking=no \
            -i ~/.ssh/prod_key \
            ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} \
            "echo 'Conexión exitosa!'" || exit 1
            
          # Usar rsync para mejor depuración
          rsync -avz --delete -e "ssh -o IdentitiesOnly=yes -i ~/.ssh/prod_key" \ ./front/dist/ \ ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/public_html/

      - name: Test SSH Connection
        run: ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.PROD_HOST }} "echo 'Conexión exitosa!'"

      - name: Deploy Frontend
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" \
            ./front/.nuxt/dist/ \
            ${{ secrets.PROD_HOST }}:/home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/public_html/

      - name: Deploy Backend
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" \
            ./back/laravel/ \
            ${{ secrets.PROD_HOST }}:/home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/private/

      # Post-instalación
      - name: Server Setup
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_HOST }} "
            chmod -R 775 /home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/private/storage
            chmod -R 775 /home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/private/bootstrap/cache
            php /home/${{ secrets.PROD_USER }}/web/${{ secrets.PROD_DOMAIN }}/private/artisan config:cache
          "